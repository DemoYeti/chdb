name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    needs: [install_clang_macos, install_clang_ubuntu]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-11 ]
        # python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11"]
        python-version: [ "3.7" ]
        compiler: [ "clang++" ]
    env:
      RUNNER_OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - name: Install clang++ for macOS
        if: matrix.os == 'macos-11'
        run: |
          pwd
          uname -a
          brew update
          brew install ccache cmake ninja libtool gettext llvm gcc binutils grep findutils
          export PATH=$(brew --prefix llvm)/bin:$PATH
          export CC=$(brew --prefix llvm)/bin/clang
          export CXX=$(brew --prefix llvm)/bin/clang++
          which clang++
          clang++ --version
      - name: Install clang++ for Ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          pwd
          uname -a
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo bash -x ./llvm.sh 15
          export CC=clang-15
          export CXX=clang++-15
          which clang++-15
          clang++-15 --version
          sudo apt-get install -y cmake ccache ninja-build yasm gawk
      - name: Check env
        run: |
          echo $CXX
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        # env:
        #   CIBW_SOME_OPTION: value
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl